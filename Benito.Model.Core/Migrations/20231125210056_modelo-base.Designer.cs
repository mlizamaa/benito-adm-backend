// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Benito.Model.Core.Migrations
{
    [DbContext(typeof(BenitoDbContext))]
    [Migration("20231125210056_modelo-base")]
    partial class modelobase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Benito.Model.Entities.Despensa.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("EnStock")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FecCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FecModifica")
                        .HasColumnType("datetime2");

                    b.Property<bool>("McaActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("McaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuElimina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Benito.Model.Entities.ECommerce.Inventario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FecCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FecModifica")
                        .HasColumnType("datetime2");

                    b.Property<bool>("McaActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("McaEliminado")
                        .HasColumnType("bit");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProductoId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("UsuCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuElimina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId1");

                    b.ToTable("Inventario");
                });

            modelBuilder.Entity("Benito.Model.Entities.ECommerce.InventarioBodega", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FecCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FecModifica")
                        .HasColumnType("datetime2");

                    b.Property<bool>("McaActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("McaEliminado")
                        .HasColumnType("bit");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuElimina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InventarioBodega");
                });

            modelBuilder.Entity("Benito.Model.Entities.ECommerce.ItemVenta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FecCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FecModifica")
                        .HasColumnType("datetime2");

                    b.Property<float>("Iva")
                        .HasColumnType("real");

                    b.Property<bool>("McaActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("McaEliminado")
                        .HasColumnType("bit");

                    b.Property<float>("MontoBruto")
                        .HasColumnType("real");

                    b.Property<float>("MontoNeto")
                        .HasColumnType("real");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuElimina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ItemVenta");
                });

            modelBuilder.Entity("Benito.Model.Entities.ECommerce.Producto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Caracteristicas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodTipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoBarra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FecCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FecModifica")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("McaActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("McaBorrador")
                        .HasColumnType("bit");

                    b.Property<bool>("McaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Resena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuElimina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Benito.Model.Entities.ECommerce.StockVenta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FecCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FecModifica")
                        .HasColumnType("datetime2");

                    b.Property<bool>("McaActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("McaEliminado")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProductoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuElimina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("StockVenta");
                });

            modelBuilder.Entity("Benito.Model.Entities.Huerto.Huerto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FecCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FecModifica")
                        .HasColumnType("datetime2");

                    b.Property<bool>("McaActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("McaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuElimina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Huerto");
                });

            modelBuilder.Entity("Benito.Model.Entities.Huerto.Plantacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ancho")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CantidadCosechada")
                        .HasColumnType("int");

                    b.Property<int>("CantidadPendiente")
                        .HasColumnType("int");

                    b.Property<Guid>("EspecieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FecCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FecModifica")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCosecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPlantacion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HuertoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Largo")
                        .HasColumnType("int");

                    b.Property<bool>("McaActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("McaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuElimina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plantacion");
                });

            modelBuilder.Entity("Benito.Model.Entities.IOT.Actuador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FecCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FecModifica")
                        .HasColumnType("datetime2");

                    b.Property<bool>("McaActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("McaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("UsuCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuElimina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actuador");
                });

            modelBuilder.Entity("Benito.Model.Entities.IOT.Sensor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FecCrea")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FecModifica")
                        .HasColumnType("datetime2");

                    b.Property<bool>("McaActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("McaEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("TipoValor")
                        .HasColumnType("int");

                    b.Property<string>("UsuCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuElimina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuModifica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sensor");
                });

            modelBuilder.Entity("Benito.Model.Entities.ECommerce.Inventario", b =>
                {
                    b.HasOne("Benito.Model.Entities.ECommerce.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId1");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Benito.Model.Entities.ECommerce.StockVenta", b =>
                {
                    b.HasOne("Benito.Model.Entities.ECommerce.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId");

                    b.Navigation("Producto");
                });
#pragma warning restore 612, 618
        }
    }
}
